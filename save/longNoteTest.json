{"name":"asdf","x":258.0,"y":274.0,"width":84.0,"height":52.0,"id":1,"alpha":255,"red":255,"green":0,"blue":0,"note":"\tpublic void drawGraph() {\n\t\treset();\n\t\tint colorOffset \u003d 255 / model.tree.size();\n\t\trecMakeNodeView(model.tree.getRoot(),\n\t\t\t\t\t\tthis.getPreferredSize().width/2,\n\t\t\t\t\t\tthis.getPreferredSize().height/2,\n\t\t\t\t\t\tMath.PI*2, new MindMapVector(0, -1),\n\t\t\t\t\t\t1, colorOffset);\n\t\trevalidate();\n\t}\n\tpublic void drawGraph() {\n\t\treset();\n\t\tint colorOffset \u003d 255 / model.tree.size();\n\t\trecMakeNodeView(model.tree.getRoot(),\n\t\t\t\t\t\tthis.getPreferredSize().width/2,\n\t\t\t\t\t\tthis.getPreferredSize().height/2,\n\t\t\t\t\t\tMath.PI*2, new MindMapVector(0, -1),\n\t\t\t\t\t\t1, colorOffset);\n\t\trevalidate();\n\t}\n\tpublic void drawGraph() {\n\t\treset();\n\t\tint colorOffset \u003d 255 / model.tree.size();\n\t\trecMakeNodeView(model.tree.getRoot(),\n\t\t\t\t\t\tthis.getPreferredSize().width/2,\n\t\t\t\t\t\tthis.getPreferredSize().height/2,\n\t\t\t\t\t\tMath.PI*2, new MindMapVector(0, -1),\n\t\t\t\t\t\t1, colorOffset);\n\t\trevalidate();\n\t}\n\tpublic void drawGraph() {\n\t\treset();\n\t\tint colorOffset \u003d 255 / model.tree.size();\n\t\trecMakeNodeView(model.tree.getRoot(),\n\t\t\t\t\t\tthis.getPreferredSize().width/2,\n\t\t\t\t\t\tthis.getPreferredSize().height/2,\n\t\t\t\t\t\tMath.PI*2, new MindMapVector(0, -1),\n\t\t\t\t\t\t1, colorOffset);\n\t\trevalidate();\n\t}\n\tpublic void drawGraph() {\n\t\treset();\n\t\tint colorOffset \u003d 255 / model.tree.size();\n\t\trecMakeNodeView(model.tree.getRoot(),\n\t\t\t\t\t\tthis.getPreferredSize().width/2,\n\t\t\t\t\t\tthis.getPreferredSize().height/2,\n\t\t\t\t\t\tMath.PI*2, new MindMapVector(0, -1),\n\t\t\t\t\t\t1, colorOffset);\n\t\trevalidate();\n\t}\n\tpublic void drawGraph() {\n\t\treset();\n\t\tint colorOffset \u003d 255 / model.tree.size();\n\t\trecMakeNodeView(model.tree.getRoot(),\n\t\t\t\t\t\tthis.getPreferredSize().width/2,\n\t\t\t\t\t\tthis.getPreferredSize().height/2,\n\t\t\t\t\t\tMath.PI*2, new MindMapVector(0, -1),\n\t\t\t\t\t\t1, colorOffset);\n\t\trevalidate();\n\t}\n\tpublic void drawGraph() {\n\t\treset();\n\t\tint colorOffset \u003d 255 / model.tree.size();\n\t\trecMakeNodeView(model.tree.getRoot(),\n\t\t\t\t\t\tthis.getPreferredSize().width/2,\n\t\t\t\t\t\tthis.getPreferredSize().height/2,\n\t\t\t\t\t\tMath.PI*2, new MindMapVector(0, -1),\n\t\t\t\t\t\t1, colorOffset);\n\t\trevalidate();\n\t}\n","children":[]}